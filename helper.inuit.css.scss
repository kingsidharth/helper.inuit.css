/* __________ HELPER CLASSES, FOR SANITY __________ 
 */

/* _____ TYPOGRAPHY _____ */

// Weights
.thin {
  font-weight: 300;
}

.normal {
  font-weight: normal;
}

.strong {
  font-weight: bold;
}


/* _____ ALIGNMENTS _____ */

// Normal
@mixin alignments($namespace: "") {

  .#{$namespace}right { text-align: right; }
  .#{$namespace}center { text-align: center; }
  .#{$namespace}left { text-align: left; }

}

@include alignments();

@include media-query(palm) {
  @include alignments('palm-');
}

@include media-query(lap) {
  @include alignments('lap-')
}

@include media-query(portable) {
  @include alignments('portable-');
}

@include media-query(desk) {
  @include alignments('desk-');
}

/* _____ COLORS _____ */
.green {
  color: $green;
}

.red {
  color: $red;
}

.blue {
  color: $blue;
}

.black {
  color: $black;
}

.grey {
  color: #CCC;
}

.dgrey {
  color: #888;
}

.yellow {
  color: $yellow;
}

// Clear-Fixes 
.clear {
  clear: both !important;
  display: block;
}

.clearleft {
  display: inline-block;
  clear: left !important;
}

.clearright {
  display: inline-block;
  clear: right !important;
}


/* _____ FLOATS _____ */
// "That's the most evil thing I've ever known."
$floats: left right none;

@mixin float-base($float, $namespace: "") {
  .#{$namespace}float#{$float} { float: $float; }
}

@mixin floater($floats, $namespace:"") {
  @each $float in $floats {
    @include float-base($float, $namespace);
  }
}

@include floater($floats);
@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include floater($floats, '#{$resolution}-');
  }
}


/* _____ HIDE & SHOW _____ */

@mixin hide-base($namespace: "") {
  @if $namespace != "" {
    .#{$namespace}hidden {
      display: none!important;
    }
  }
  @else {
    .hidden {
      display: none;
    }
  }
}

@mixin hide-mixin($namespace: "") {
  @include hide-base($namespace);
}

@include hide-mixin();
@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include hide-mixin('#{$resolution}-');
  }
}

@mixin show-base($namespace: "") {
  .#{$namespace}-show {
    @each $res in $subres {
      @if $res != $namespace {
        @extend .#{$res}-hidden;
      }
    }
  }
}

@each $resolution in $resolutions {
  @include show-base($resolution);
}

/* _____ MARGINS _____ */
@mixin no-margin-base($namespace: "", $direction: "") {

  .#{$namespace}no#{$direction}-margin{ margin#{$direction}: 0px!important; }

}

@mixin no-margin($namespace: "") {
  @include no-margin-base($namespace);

  @each $direction in $directions {
    @include no-margin-base($namespace, $direction);
  }
}

@include no-margin();

@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include no-margin('#{$resolution}-');
  }
}

.full-bottom-margin {
  margin-bottom: 20px!important;
}

.half-bottom-margin {
  margin-bottom: 10px;
}


/* _____ PADDING _____ */
@mixin no-padding-base($namespace: "", $direction: "") {

  .#{$namespace}no#{$direction}-padding{ padding#{$direction}: 0px!important; }

}

@mixin no-padding($namespace: "") {
  @include no-padding-base($namespace);

  @each $direction in $directions {
    @include no-padding-base($namespace, $direction);
  }
}

@include no-padding();

@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include no-padding('#{$resolution}-');
  }
}

.half-top-padding {
  padding-top: 11.2px;
}

.full-left-padding {
  padding-left: 20px;
}

/* _____ BLOCKS & INLINES _____ */

@mixin display-base($namespace:"", $display: block) {
  .#{$namespace}#{$display} { display: $display!important; }
}

@include display-base();
@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include display-base('#{$resolution}-');
  }
}

@include display-base("", inline-block);
@each $resolution in $resolutions {
  @include media-query($resolution) {
    @include display-base('#{$resolution}-', inline-block);
  }
}

/* Sticky */
// Makes an #*_area stick 
// to top.
.sticky {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 2000;
  @include box-shadow(rgba(0, 0, 0, 0.3) 0 1px 2px);
}

/* _____ INSTAMOJO LOGO _____ */ 
.brand {
  background: image-url('logo.png') no-repeat;
  display: block;
  text-indent: -9999px;
}


/* _____ COLOURED BACKGROUND AREAS _____ */
.blue_area, .green_area, .black_area, .red_area {
  color: $white;
  a {
    color: $white;
    text-decoration: none;
    border-bottom: 1px dotted $white;
    &:hover {
      border-bottom: 1px solid $white;
      color: $white;
    }
    h1, h2, h3, h4, h5, h6 {
      color: $white;
    }
  }
  .nav a, a.btn a.btn-special{
    text-decoration: none;
    border-bottom: none;
    &:hover {
      text-decoration: none;
      border-bottom: none;
    }
  }
}

.blue_area {
  background: $blue;
}

.green_area {
  background: $green;
}

.black_area {
  background: $black;
}

.red_area {
  background: adjust-lightness($red, -7%);
}

.grey_area {
  background: $grey;
}

.egrey_area {
  background: $egrey;
}

.yellow_area {
  background: adjust-lightness(mix($yellow, $white), 10%);
}


// Special Classes
.yellow_note {
  @extend .yellow_area;
  @extend .padded;
  @extend .rounded;
  border: 1px solid $yellow;
}

.blue_note {
  background: adjust-lightness(mix($blue, $white), 15%);
  @extend .padded;
  @extend .rounded;
  border: 1px solid mix($blue, $white);
}

.grey_note {
  @extend .grey_area;
  @extend .padded;
  @extend .rounded;
  border: 1px solid #CCC;
}

// Others
.no-border {
  border-width: 0px!important;
}


@include media-query(palm) {
  .palm-full-bottom-margin {
    margin-bottom: 20px;
  }
}


.highlight {
  background: adjust-lightness(mix($white, $yellow), 15);
}

.padded {
  padding: 1em;
}

.rounded {
  border-radius: 3px;
}

.loading {
  min-height: 150px;
  background: image-url('loader.gif') center center no-repeat;
}
